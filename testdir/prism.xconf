<?xml version='1.0' encoding='ISO-8859-1'?>
<properties>
    <!-- config file testing. Do adapt see teh connection property -->
  <variables>
    <!--variable name="demo.path" value="/@WEB@/sample"/-->
  </variables>
  <category name="general">

    <!--
      Defines which funcionality uses DBPrism for flexible parameter pasing.
      possible values: old|compact
      Default: old

      "old" functionality is compatible with Oracle Web Server 4.x
      that is, for an url like this:
      http://www.acme.com/@WEB@/sample/!@USER@.my_pkg.my_proc?x=a&y=b&x=c
      four parameter will be passed, like these:
        num_entries ==> 3
        name_array ==> (`x', `y', `x')
        value_array ==> (`a', `b', `c')
        reserved ==> (reserved)
      "compact" functionality is compatible with Oracle mod_plsql
      for the above url example, the encoded argument will be:
        name_array ==> (`x', `y', `x')
        value_array ==> (`a', `b', `c')
      Note that two arguments of type array will be passed
    -->
    <property name="flexibleRequest" value="compact"/>

    <!--
      Locale setting, which affects NLS_NUMERIC_CHARACTERS and NLS_DATE_FORMAT
      lang and country are using in java Locale(lang,country) object
      The default values are extracted from the JVM default Locale.
      Due to this change could affect other sensitivy JVM components
      I recomend to use JVM default setting

      lang codes are the lower-case two-letter codes as defined by ISO-639.
      You can find a full list of these codes at a number of sites,
      such as: http://www.ics.uci.edu/pub/ietf/http/related/iso639.txt
    <property name="lang" value="en"/>
    -->

    <!--
      country codes are the upper-case two-letter codes as defined by ISO-3166.
      You can find a full list of these codes at a number of sites,
      such as: http://www.chemie.fu-berlin.de/diverse/doc/ISO_3166.html
    <property name="country" value="us"/>
    -->

    <!--
      Choose behavior of getdplsPath() and getPathInfo() function
      This depends on your system, change it if DB Prism doesn't work
      possible values: 0|1|2
      default: 0
    -->
    <property name="behavior" value="2"/>

    <!--
      Caching procedures description will increase speed, but can cause problems
      when procedure description changes (e.g. during development proces)
      possible values: true or false
      default: true
    -->
    <property name="cacheprocedure" value="true"/>

    <!--
      Default content type of @WEB@ output
      If you want to display non-ascii characters set proper charset here
      default : text/html
      example : text/html; charset=iso-8859-2
      example : text/html; charset=utf-8
    -->
    <property name="contenttype" value="text/html; charset=iso-8859-1"/>

    <!--
      UnauthorizedText Sent after SC_UNAUTHORIZED response
      default : You must be enter DB username and password to access at the system
      Tips: to redirect to another page use HTML tag META as showing below
      Remember used well formed XML tags under Cocoon.
    -->
    <property name="UnauthorizedText" value="You must be enter DB username and password to access at the system"/>

    <!--
      Connection alias, same as PL/SQL agent virtual path
      Example: sample => for virtual dir /@WEB@/sample
      Example: demo => for virtual dir /@WEB@/demo
      Work with multiple zones definition in @WEB@
      The @WEB@ zones args must be point to the same prism.properties and Prism.jar
      See web.xml file for more details
    -->
    <property name="alias" value="user_jp"/> 

    <!--
      Default Section. Parameter defined into this section will be used as custom
      default values for the DAD. It will be override DBPrism default values.
    -->
    <property name="connectString" value="${demo.db}"/>
    <property name="errorLevel" value="0"/>
    <property name="errorPage" value="/404.html"/>
    <property name="dbcharset" value="iso-8859-1"/>
    <property name="clientcharset" value="iso-8859-1"/>
    <property name="dynamicLoginRealm" value="new DB Login"/>
    
    <!-- Values for JTADBPrismConnectionCacheImpl -->
    <property name="MinLimit" value="0"/>
    <property name="MaxLimit" value="3"/>
    <property name="LoginTimeout" value="10"/>
    <!-- deprecated in 2.1.2 -->
    <property name="CacheScheme" value="FixedWait"/>
    <!-- new in 2.1.2 -->
    <property name="InitialLimit" value="0"/>
    <property name="MaxStatementsLimit" value="0"/>
    <property name="ValidateConnection" value="false"/>
    <!-- end user default values -->
  </category>

<category name="DAD_user_jp">
    <property name="dynamicLoginRealm" value="This is user_jp"/>
    <property name="connectString" value="jdbc:oracle:thin:@localhost:11521:xe"/>
</category>

 <category name="Manager">
    <!--
      Minimal/Maximun numbers of Connections to database
      Valid for JdbcDBPrismConnectionCacheImpl
    -->
    <property name="minconnections" value="0"/>
    <property name="maxconnections" value="20"/>

    <!--
      Defines how many seconds a connection could stay in a busy list
      Default 600
    -->
    <property name="timeout" value="600"/>
    
    <!--
      New in version 1.2.0
      Defines which implementation uses for allocating connection
      This parameter is MANDATORY
      Values:
        - com.prism.utils.JdbcDBPrismConnectionCacheImpl
        - com.prism.oracle.JTADBPrismConnectionCacheImpl
      com.prism.utils.JdbcDBPrismConnectionCacheImpl has the same functionality as
      DB Prism 1.1.x ResourceManager class
      com.prism.oracle.JTADBPrismConnectionCacheImpl is implemented using the new
      functionality of Oracle JDBC 2.0 optional package includes into oracle version 8.1.6+
      but JDBC 8.1.7+ drivers is highly recomended due to several bugs into 8.1.6
      com.prism.utils.JndiDBPrismConnectionCacheImpl Connection Caching using
      JNDI Datasources defined into a J2EE container (data-sources.xml file)

    <property name="class" value="com.prism.utils.JndiDBPrismConnectionCacheImpl"/>
    <property name="class" value="com.prism.utils.JdbcDBPrismConnectionCacheImpl"/>
    <property name="class" value="com.prism.oracle.UCPDBPrismConnectionCacheImpl"/>
    -->
    <!--<property name="class" value="com.prism.oracle.JTADBPrismConnectionCacheImpl"/-->
    <property name="class" value="com.prism.utils.JdbcDBPrismConnectionCacheImpl"/>
    
  </category>


  
  
</properties>
